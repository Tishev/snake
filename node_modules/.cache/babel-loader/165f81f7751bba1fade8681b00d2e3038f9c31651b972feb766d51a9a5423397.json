{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/\\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/AppStore/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }]);\n  const [food, setFood] = useState(generateFood());\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection('UP');\n          break;\n        case 'ArrowDown':\n          setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const generateFood = () => {\n    const newFood = {\n      x: Math.floor(Math.random() * 20),\n      y: Math.floor(Math.random() * 20)\n    };\n    return newFood;\n  };\n  useEffect(() => {\n    if (gameOver) return;\n    const moveSnake = () => {\n      const newSnake = [...snake];\n      const head = {\n        ...newSnake[0]\n      };\n      switch (direction) {\n        case 'UP':\n          head.y -= 1;\n          break;\n        case 'DOWN':\n          head.y += 1;\n          break;\n        case 'LEFT':\n          head.x -= 1;\n          break;\n        case 'RIGHT':\n          head.x += 1;\n          break;\n        default:\n          break;\n      }\n      newSnake.unshift(head);\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFood());\n      } else {\n        newSnake.pop();\n      }\n      checkCollision(newSnake);\n      setSnake(newSnake);\n    };\n    const gameInterval = setInterval(moveSnake, 200);\n    return () => {\n      clearInterval(gameInterval);\n    };\n  }, [snake, direction, gameOver, food]);\n  const checkCollision = snake => {\n    const head = snake[0];\n    if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20) {\n      setGameOver(true);\n    }\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[i].x === head.x && snake[i].y === head.y) {\n        setGameOver(true);\n        break;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(20, 20px)'\n        },\n        children: Array.from({\n          length: 400\n        }).map((_, index) => {\n          const x = index % 20;\n          const y = Math.floor(index / 20);\n          const isSnake = snake.some(part => part.x === x && part.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '20px',\n              border: '1px solid #ccc',\n              backgroundColor: isSnake ? 'green' : isFood ? 'red' : 'white'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(SnakeGame, \"cnY4p3kqNhZ+rOkerVAqmvxiSko=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","x","y","food","setFood","generateFood","direction","setDirection","gameOver","setGameOver","handleKeyPress","e","key","window","addEventListener","removeEventListener","newFood","Math","floor","random","moveSnake","newSnake","head","unshift","pop","checkCollision","gameInterval","setInterval","clearInterval","i","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","Array","from","map","_","index","isSnake","some","part","isFood","width","height","border","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/разработка/AppStore/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SnakeGame = () => {\n    const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n    const [food, setFood] = useState(generateFood());\n    const [direction, setDirection] = useState('RIGHT');\n    const [gameOver, setGameOver] = useState(false);\n\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            switch (e.key) {\n                case 'ArrowUp':\n                    setDirection('UP');\n                    break;\n                case 'ArrowDown':\n                    setDirection('DOWN');\n                    break;\n                case 'ArrowLeft':\n                    setDirection('LEFT');\n                    break;\n                case 'ArrowRight':\n                    setDirection('RIGHT');\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, []);\n    const generateFood = () => {\n        const newFood = {\n            x: Math.floor(Math.random() * 20),\n            y: Math.floor(Math.random() * 20),\n        };\n        return newFood;\n    };\n\n    useEffect(() => {\n        if (gameOver) return;\n\n        const moveSnake = () => {\n            const newSnake = [...snake];\n            const head = { ...newSnake[0] };\n\n            switch (direction) {\n                case 'UP':\n                    head.y -= 1;\n                    break;\n                case 'DOWN':\n                    head.y += 1;\n                    break;\n                case 'LEFT':\n                    head.x -= 1;\n                    break;\n                case 'RIGHT':\n                    head.x += 1;\n                    break;\n                default:\n                    break;\n            }\n\n            newSnake.unshift(head);\n\n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFood());\n            } else {\n                newSnake.pop();\n            }\n\n            checkCollision(newSnake);\n            setSnake(newSnake);\n        };\n\n        const gameInterval = setInterval(moveSnake, 200);\n\n        return () => {\n            clearInterval(gameInterval);\n        };\n    }, [snake, direction, gameOver, food]);\n\n    const checkCollision = (snake) => {\n        const head = snake[0];\n\n        if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20) {\n            setGameOver(true);\n        }\n\n        for (let i = 1; i < snake.length; i++) {\n            if (snake[i].x === head.x && snake[i].y === head.y) {\n                setGameOver(true);\n                break;\n            }\n        }\n    };\n\n    return (\n        <div>\n            {gameOver ? (\n                <p>Game Over!</p>\n            ) : (\n                <div>\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(20, 20px)' }}>\n                        {Array.from({ length: 400 }).map((_, index) => {\n                            const x = index % 20;\n                            const y = Math.floor(index / 20);\n                            const isSnake = snake.some((part) => part.x === x && part.y === y);\n                            const isFood = food.x === x && food.y === y;\n\n                            return (\n                                <div\n                                    key={index}\n                                    style={{\n                                        width: '20px',\n                                        height: '20px',\n                                        border: '1px solid #ccc',\n                                        backgroundColor: isSnake\n                                            ? 'green'\n                                            : isFood\n                                            ? 'red'\n                                            : 'white',\n                                    }}\n                                ></div>\n                            );\n                        })}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SnakeGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}