{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/\\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430/FRONTEND/snake/snake/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const generateFood = () => {\n    const newFood = {\n      x: Math.floor(Math.random() * 20),\n      y: Math.floor(Math.random() * 20)\n    };\n    return newFood;\n  };\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }]);\n  const [food, setFood] = useState(generateFood());\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection('UP');\n          break;\n        case 'ArrowDown':\n          setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  useEffect(() => {\n    if (gameOver) return;\n    const moveSnake = () => {\n      const newSnake = [...snake];\n      const head = {\n        ...newSnake[0]\n      };\n      switch (direction) {\n        case 'UP':\n          head.y -= 1;\n          break;\n        case 'DOWN':\n          head.y += 1;\n          break;\n        case 'LEFT':\n          head.x -= 1;\n          break;\n        case 'RIGHT':\n          head.x += 1;\n          break;\n        default:\n          break;\n      }\n      newSnake.unshift(head);\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFood());\n      } else {\n        newSnake.pop();\n      }\n      checkCollision(newSnake);\n      setSnake(newSnake);\n    };\n    const gameInterval = setInterval(moveSnake, 200);\n    return () => {\n      clearInterval(gameInterval);\n    };\n  }, [snake, direction, gameOver, food]);\n  const checkCollision = snake => {\n    const head = snake[0];\n    if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20) {\n      setGameOver(true);\n    }\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[i].x === head.x && snake[i].y === head.y) {\n        setGameOver(true);\n        break;\n      }\n    }\n  };\n  const handleButtonClick = buttonDirection => {\n    setDirection(buttonDirection);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-retry\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"btn\",\n        children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(20, 20px)'\n        },\n        children: Array.from({\n          length: 400\n        }).map((_, index) => {\n          const x = index % 20;\n          const y = Math.floor(index / 20);\n          const isSnake = snake.some(part => part.x === x && part.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '20px',\n              border: '1px solid #ccc',\n              backgroundColor: isSnake ? 'green' : isFood ? 'red' : 'white'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"up\",\n          onClick: () => handleButtonClick('UP'),\n          children: \"\\u0412\\u0432\\u0435\\u0440\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"down\",\n          onClick: () => handleButtonClick('DOWN'),\n          children: \"\\u0412\\u043D\\u0438\\u0437\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"left\",\n          onClick: () => handleButtonClick('LEFT'),\n          children: \"\\u0412\\u043B\\u0435\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick('RIGHT'),\n          children: \"\\u0412\\u043F\\u0440\\u0430\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"cnY4p3kqNhZ+rOkerVAqmvxiSko=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","generateFood","newFood","x","Math","floor","random","y","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","handleKeyPress","e","key","window","addEventListener","removeEventListener","moveSnake","newSnake","head","unshift","pop","checkCollision","gameInterval","setInterval","clearInterval","i","length","handleButtonClick","buttonDirection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","style","display","gridTemplateColumns","Array","from","map","_","index","isSnake","some","part","isFood","width","height","border","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/разработка/FRONTEND/snake/snake/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n    const generateFood = () => {\n        const newFood = {\n            x: Math.floor(Math.random() * 20),\n            y: Math.floor(Math.random() * 20),\n        };\n        return newFood;\n    };\n\n    const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n    const [food, setFood] = useState(generateFood());\n    const [direction, setDirection] = useState('RIGHT');\n    const [gameOver, setGameOver] = useState(false);\n\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            switch (e.key) {\n                case 'ArrowUp':\n                    setDirection('UP');\n                    break;\n                case 'ArrowDown':\n                    setDirection('DOWN');\n                    break;\n                case 'ArrowLeft':\n                    setDirection('LEFT');\n                    break;\n                case 'ArrowRight':\n                    setDirection('RIGHT');\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (gameOver) return;\n\n        const moveSnake = () => {\n            const newSnake = [...snake];\n            const head = { ...newSnake[0] };\n\n            switch (direction) {\n                case 'UP':\n                    head.y -= 1;\n                    break;\n                case 'DOWN':\n                    head.y += 1;\n                    break;\n                case 'LEFT':\n                    head.x -= 1;\n                    break;\n                case 'RIGHT':\n                    head.x += 1;\n                    break;\n                default:\n                    break;\n            }\n\n            newSnake.unshift(head);\n\n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFood());\n            } else {\n                newSnake.pop();\n            }\n\n            checkCollision(newSnake);\n            setSnake(newSnake);\n        };\n\n        const gameInterval = setInterval(moveSnake, 200);\n\n        return () => {\n            clearInterval(gameInterval);\n        };\n    }, [snake, direction, gameOver, food]);\n\n    const checkCollision = (snake) => {\n        const head = snake[0];\n\n        if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20) {\n            setGameOver(true);\n        }\n\n        for (let i = 1; i < snake.length; i++) {\n            if (snake[i].x === head.x && snake[i].y === head.y) {\n                setGameOver(true);\n                break;\n            }\n        }\n    };\n    const handleButtonClick = (buttonDirection) => {\n        setDirection(buttonDirection);\n    };\n\n    return (\n        <div className=\"block\">\n            {gameOver ? (\n                <div className=\"block-retry\">\n                    <p className=\"title\">Game Over!</p>\n                    <button onClick={() => window.location.reload()} className=\"btn\">\n                        Повторить\n                    </button>\n                </div>\n            ) : (\n                <div className=\"desc\">\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(20, 20px)' }}>\n                        {Array.from({ length: 400 }).map((_, index) => {\n                            const x = index % 20;\n                            const y = Math.floor(index / 20);\n                            const isSnake = snake.some((part) => part.x === x && part.y === y);\n                            const isFood = food.x === x && food.y === y;\n\n                            return (\n                                <div\n                                    key={index}\n                                    style={{\n                                        width: '20px',\n                                        height: '20px',\n                                        border: '1px solid #ccc',\n                                        backgroundColor: isSnake\n                                            ? 'green'\n                                            : isFood\n                                            ? 'red'\n                                            : 'white',\n                                    }}\n                                ></div>\n                            );\n                        })}\n                    </div>\n                    <div className=\"block-btn\">\n                        <button className=\"up\" onClick={() => handleButtonClick('UP')}>\n                            Вверх\n                        </button>\n                        <button className=\"down\" onClick={() => handleButtonClick('DOWN')}>\n                            Вниз\n                        </button>\n                        <button className=\"left\" onClick={() => handleButtonClick('LEFT')}>\n                            Влево\n                        </button>\n                        <button onClick={() => handleButtonClick('RIGHT')}>Вправо</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}